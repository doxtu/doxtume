{"version":3,"sources":["firebase/firebase.utils.js","pages/login/login.styles.js","pages/login/login.components.jsx","pages/convos/components/convo-list-item/convo-list-item.components.jsx","pages/convos/components/convos-card/convos-card.styles.js","pages/convos/components/convos-card/convos-card.components.jsx","pages/convos/components/search-card/search-card.styles.js","pages/convos/components/search-card/search-card.components.jsx","redux/base/base.reducer.js","pages/convos/components/settings-card/settings-card.styles.js","pages/convos/components/settings-card/settings-card.components.jsx","pages/convos/components/gallery-card/gallery-card.styles.js","pages/convos/components/gallery-card/gallery-card.components.jsx","pages/convos/components/suck-counter-card/suck-counter-card.styles.js","pages/convos/components/suck-counter-card/suck-counter-card.components.jsx","pages/convos/convos.styles.js","pages/convos/convos.components.jsx","pages/messages/messages.styles.js","redux/messages/messages.reducer.js","pages/messages/messages.components.jsx","App.routes.jsx","redux/socket/socket.reducer.js","redux/sagas.js","redux/root-reducer.js","redux/store.js","components/websocket-provider/websocket-provider.components.jsx","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","makeStyles","theme","root","padding","formElement","width","button","backgroundColor","palette","primary","main","color","gridSizes","xs","sm","md","lg","xl","withRouter","history","classes","useStyles","React","useState","username","password","loginForm","setLoginForm","handleChange","e","target","value","name","className","onSubmit","preventDefault","signInWithEmailAndPassword","push","Grid","container","spacing","direction","alignContent","item","Typography","variant","style","textAlign","TextField","size","placeholder","onChange","type","Button","connect","state","socket","isConnected","user","base","convo","ListItem","onClick","send","JSON","stringify","payload","jwt","token","userid","uid","convoid","ListItemIcon","Badge","badgeContent","unreadCount","ListItemText","convoname","secondary","participants","convoList","maxHeight","overflowY","input","height","convos","messages","convoName","messagesFilter","inputFields","setInputFields","Card","InputProps","fullWidth","List","dense","Object","keys","sort","convo1","convo2","map","index","messageResults","messageSearchResults","searchText","setSearchText","result","alias","timestamp","rawtext","SET_DARK_MODE_ENABLED","SET_USER","FORCED_RERENDER","setUser","INITIAL_STATE","darkModeEnabled","rerender","baseReducer","console","log","dispatch","setDarkModeEnabled","isDarkModeEnabled","setAlias","setColor","alignItems","Switch","checked","_","img","urls","galleryUrls","useEffect","url","alt","src","process","alignText","suckCount","Fab","valueToAdd","fullWidthGridSizes","signOut","localStorage","clear","inputGroup","SET_CONVOS","SET_MESSAGE_SEARCH_RESULTS","SET_CURRENT_CONVOID","SET_GALLERY_URLS","SET_SUCK_COUNTER","setConvos","currentConvoid","messagesReducer","textFieldSizes","buttonSizes","uploader","setCurrentConvoid","match","split","currentConvo","currentMessages","message","setMessage","list","setList","scrollTo","top","ref","test","Box","links","forEach","link","replace","text","d","Link","href","ListItemAvatar","fileList","files","i","length","blob","fileIdentifier","ret","Math","round","random","toString","_generateRandomString","meta","fileReader","FileReader","onload","readAsDataURL","autoComplete","justify","Container","exact","path","render","to","ws","WebSocket","SET_SOCKET","SET_IS_CONNECTED","CONVO_LIST_RESPONSE","socketReducer","convoListResponseSaga","allSagas","takeEvery","put","all","call","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","visibilityChange","persistor","persistStore","warn","undefined","document","hidden","msHidden","webkitHidden","convoListResponse","setMessageSearchResults","setSocket","setGalleryUrls","setSuckCounter","count","setIsConnected","onopen","onmessage","data","parse","normalizedConvos","reduce","acc","imageUrls","getState","todayString","window","addEventListener","prefersDarkMode","useMediaQuery","onAuthStateChanged","a","getIdToken","superTheme","useMemo","createMuiTheme","basename","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"0PAaAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAOT,IAASS,O,GAEdT,EAAf,E,4ECfeU,eAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,MAAO,QAETC,OAAQ,CACNC,gBAAiBN,EAAMO,QAAQC,QAAQC,KACvCC,MAAO,OACP,UAAW,CACTA,MAAO,aCLPC,EAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAsESC,eAnEG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAAUC,IADiB,EAGCC,IAAMC,SAAS,CAC/CC,SAAU,GACVC,SAAU,KALqB,mBAG1BC,EAH0B,KAGfC,EAHe,KAc3BC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,MAAOC,EADW,EACXA,KAEfL,EAAa,2BACRD,GADO,kBAETM,EAAOD,MAIZ,OACE,sBAAME,UAAWb,EAAQlB,KAAMgC,SAhBZ,SAACL,GACpBA,EAAEM,iBACFpC,EAAKqC,2BAA2BV,EAAUF,SAAUE,EAAUD,UAC9DN,EAAQkB,KAAK,YAab,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,SAASC,aAAa,SAA5D,UACE,cAACJ,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAACgC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,UAAW,UAA7C,uBACY,sDAGd,cAACT,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACoC,EAAA,EAAD,CACEhB,KAAK,WACLa,QAAQ,WACRI,KAAK,QACLC,YAAY,QACZnB,MAAOL,EAAUF,SACjB2B,SAAUvB,EACVK,UAAWb,EAAQhB,iBAGvB,cAACkC,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACoC,EAAA,EAAD,CACEhB,KAAK,WACLoB,KAAK,WACLP,QAAQ,WACRK,YAAY,WACZD,KAAK,QACLlB,MAAOL,EAAUD,SACjB0B,SAAUvB,EACVK,UAAWb,EAAQhB,iBAGvB,cAACkC,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACyC,EAAA,EAAD,CACEpB,UAAS,UAAKb,EAAQd,OAAb,YAAuBc,EAAQhB,aACxCgD,KAAK,SACLP,QAAQ,YAHV,8B,uEC3BKS,eANS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1BC,KAAMH,EAAMI,KAAKD,QAGJJ,EApCO,SAAC,GAAmD,IAAjDI,EAAgD,EAAhDA,KAAMF,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,YAAaG,EAAqB,EAArBA,MAAOzC,EAAc,EAAdA,QACzD,OACE,eAAC0C,EAAA,EAAD,CACEvD,QAAM,EACNwD,QAAS,WACHL,IACFD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbC,QAASX,EAAMW,YAKrBpD,EAAQkB,KAAR,oBAA0BuB,EAAMW,YAftC,UAkBE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,aAAcd,EAAMe,YAAahE,MAAM,UAA9C,SACE,cAAC,IAAD,QAGJ,cAACiE,EAAA,EAAD,CAAcnE,QAASmD,EAAMiB,UAAWC,UAAWlB,EAAMmB,qBC/BhD/E,cAAW,CACxBE,KAAM,CAAEC,QAAS,QACjB6E,UAAW,CAAEC,UAAW,QAASC,UAAW,QAC5CC,MAAO,CAAEC,OAAQ,MCYbxE,EAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAuHSqC,eAPS,SAACC,GAAD,MAAY,CAClC8B,OAAQ9B,EAAM+B,SAASD,OACvB3B,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,eAGbH,CAAyBpC,aApHrB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,QAASkE,EAAwC,EAAxCA,OAAQ3B,EAAgC,EAAhCA,KAAMF,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC7CrC,EAAUC,IADqD,EAG/BC,IAAMC,SAAS,CACnDgE,UAAW,GACXC,eAAgB,KALmD,mBAG9DC,EAH8D,KAGjDC,EAHiD,KAQ/D9D,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBE,EADkB,EAClBA,KAAMD,EADY,EACZA,MACd2D,EAAe,2BACVD,GADS,kBAEXzD,EAAOD,MAIZ,OACE,cAAC4D,EAAA,EAAD,CAAM1D,UAAWb,EAAQlB,KAAzB,SACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAGF,cAACP,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/C,SACE,cAAC+B,EAAA,EAAD,CACE4C,WAAY,CAAE3D,UAAWb,EAAQ+D,OACjCnD,KAAK,YACL6D,WAAS,EACThD,QAAQ,WACRK,YAAY,gBACZC,SAAUvB,EACVG,MAAO0D,EAAYF,cAGvB,cAACjD,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAACoC,EAAA,EAAD,CACEwC,WAAS,EACT/B,QAAS,WACJN,GAAUE,GAAQD,GACnBD,EAAOO,KAAKC,KAAKC,UAAU,CACzBb,KAAM,uBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbO,UAAWY,EAAYF,cAU7BG,EAAe,2BAAKD,GAAN,IAAmBF,UAAW,OAnBhD,yBA2BN,cAACjD,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/C,SACE,cAAC+B,EAAA,EAAD,CACE4C,WAAY,CAAE3D,UAAWb,EAAQ+D,OACjCnD,KAAK,iBACL6D,WAAS,EACThD,QAAQ,WACRK,YAAY,YACZnB,MAAO0D,EAAYD,eACnBrC,SAAUvB,MAGd,cAACU,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAACoC,EAAA,EAAD,CAAQpB,UAAWb,EAAQ+D,MAAOU,WAAS,EAA3C,4BAON,cAACvD,EAAA,EAAD,yBAAML,UAAWb,EAAQ4D,UAAWrC,MAAI,GAAK/B,GAA7C,aACE,cAACkF,EAAA,EAAD,CAAMC,OAAK,EAAX,SACGC,OAAOC,KAAKZ,GACVa,MAAK,SAACC,EAAQC,GACb,OAAIf,EAAOc,GAAQxB,YAAcU,EAAOe,GAAQzB,aACtC,EACNU,EAAOc,GAAQxB,YAAcU,EAAOe,GAAQzB,YACvC,EACF,KAER0B,KAAI,SAACzC,EAAO0C,GAAR,OACH,cAAC,EAAD,CAEE1C,MAAOyB,EAAOzB,GACdzC,QAASA,GAFJmF,oBCxHRtG,cAAW,CACxBE,KAAM,CAAEC,QAAS,QACjBoG,eAAgB,CAAEtB,UAAW,QAASC,UAAW,QACjDC,MAAO,CAAEC,OAAQ,MCUbxE,EAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAuESqC,eAPS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1BC,KAAMH,EAAMI,KAAKD,KACjB8C,qBAAsBjD,EAAM+B,SAASkB,wBAGxBlD,EApEI,SAAC,GAAyD,IAAvDE,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,KAAM8C,EAA2B,EAA3BA,qBACzCpF,EAAUC,IAD0D,EAGtCC,IAAMC,SAAS,IAHuB,mBAGnEkF,EAHmE,KAGvDC,EAHuD,KAK1E,OACE,cAACf,EAAA,EAAD,CAAM1D,UAAWb,EAAQlB,KAAzB,SACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACoC,EAAA,EAAD,CACEhB,KAAK,iBACLD,MAAO0E,EACPtD,SAAU,SAACtB,GAAD,OAAO6E,EAAc7E,EAAEC,OAAOC,QACxC8D,WAAS,OAGb,cAACvD,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACyC,EAAA,EAAD,CACEwC,WAAS,EACThD,QAAQ,YACRiB,QAAS,WACHN,GAAUC,GAAeC,GAC3BF,EAAOO,KACLC,KAAKC,UAAU,CACdb,KAAM,uBACLc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbmC,WAAYA,MAUpBC,EAAc,KArBlB,uBA0BF,cAACpE,EAAA,EAAD,yBAAML,UAAWb,EAAQmF,eAAgB5D,MAAI,GAAK/B,GAAlD,aACE,cAACkF,EAAA,EAAD,CAAMC,OAAK,EAAX,SACGS,EACGA,EAAqBH,KAAI,SAACM,EAAQL,GAAT,OACvB,cAACzC,EAAA,EAAD,UACE,cAACe,EAAA,EAAD,oBACM+B,EAAOC,MADb,aACuBD,EAAOE,UAD9B,eAC8CF,EAAOG,YAFxCR,MAMjB,kB,SC5EVS,EAAwB,+BACxBC,EAAW,kBACXC,EACJ,0EAOWC,EAAU,SAACxD,GAAD,MAAW,CAChCN,KAAM4D,EACN9C,QAASR,IAQLyD,EAAgB,CACpBC,iBAAiB,EACjB1D,KAAM,KACN2D,SAAU,GAgCGC,EA7BK,WAA+C,IAA9C/D,EAA6C,uDAArC4D,EAAqC,yCAApB/D,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,QAClD,OAAQd,GACN,KAAK6D,EACH,OAAO1D,EAET,KAAKwD,EACH,OAAO,2BACFxD,GADL,IAEE6D,gBAAiBlD,IAGrB,KAAK8C,EACH,OAAO,2BACFzD,GADL,IAEEG,KAAMQ,IAGV,KAAK+C,EAEH,OADAM,QAAQC,IAAI,UACL,2BACFjE,GADL,IAEE8D,SAAUnD,IAGd,QACE,OAAOX,ICjDEvD,cAAW,CACxBE,KAAM,CAAEC,QAAS,QACjBgF,MAAO,CAAEC,OAAQ,MCYbxE,EAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IA4ISqC,eAZS,SAACC,GAAD,MAAY,CAClC6D,gBAAiB7D,EAAMI,KAAKyD,gBAC5B5D,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1BC,KAAMH,EAAMI,KAAKD,SAGQ,SAAC+D,GAAD,MAAe,CACxCC,mBAAoB,SAACC,GAAD,OAClBF,EFzJ8B,SAACE,GAAD,MAAwB,CACxDvE,KAAM2D,EACN7C,QAASyD,GEuJED,CAAmBC,QAGjBrE,EAzIM,SAAC,GAMf,IALL8D,EAKI,EALJA,gBACAM,EAII,EAJJA,mBACAlE,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,KAEMtC,EAAUC,IADZ,EAGsBC,IAAMC,SAAS,IAHrC,mBAGGqF,EAHH,KAGUgB,EAHV,OAIsBtG,IAAMC,SAAS,IAJrC,mBAIGZ,EAJH,KAIUkH,EAJV,KAMJ,OACE,cAAClC,EAAA,EAAD,CAAM1D,UAAWb,EAAQlB,KAAzB,SACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,cAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAGF,cAACP,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACuF,WAAW,SAA3B,UACE,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2B,EAAA,EAAD,0BAEF,cAACN,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC8G,EAAA,EAAD,CACEC,QAASZ,EACTjE,SAAU,SAAC8E,EAAGlG,GACZ2F,EAAmB3F,cAO7B,cAACO,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACuF,WAAW,SAA3B,UACE,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2B,EAAA,EAAD,sBAEF,cAACN,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC+B,EAAA,EAAD,CACEhB,KAAK,QACLD,MAAO6E,EACPzD,SAAU,SAACtB,GAAD,OAAO+F,EAAS/F,EAAEC,OAAOC,QACnC8D,WAAS,MAGb,cAACvD,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAACoC,EAAA,EAAD,CACES,QAAS,WACHJ,GAAQA,EAAKU,OAASZ,GAAUC,GACnCD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbsC,MAAOA,MAWdgB,EAAS,KAEX/B,WAAS,EAtBX,yBA6BN,cAACvD,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,GAAf,aACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACuF,WAAW,SAA3B,UACE,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2B,EAAA,EAAD,sBAEF,cAACN,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC+B,EAAA,EAAD,CACEhB,KAAK,QACLkB,YAAY,UACZnB,MAAOpB,EACPkF,WAAS,EACT1C,SAAU,SAACtB,GAAD,OAAOgG,EAAShG,EAAEC,OAAOC,YAGvC,cAACO,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAACoC,EAAA,EAAD,CACES,QAAS,WACHJ,GAAQA,EAAKU,OAASZ,GACxBA,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACb3D,MAAOA,MAUfkH,EAAS,KAEXhC,WAAS,EArBX,iCCnHC7F,cAAW,CACxBE,KAAM,CACJC,QAAS,OACT8E,UAAW,QACXC,UAAW,QAEbgD,IAAK,CACH7H,MAAO,UCFLO,EAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAiDSqC,gBAPS,SAACC,GAAD,MAAY,CAClCG,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1B0E,KAAM5E,EAAM+B,SAAS8C,eAGR9E,EA9CK,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,KAAMyE,EAAW,EAAXA,KAC1C/G,EAAUC,IAehB,OAbAC,IAAM+G,WAAU,WACV7E,GAAUC,GAAeC,GAC3BF,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,wBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,UAIpB,CAACd,EAAQC,EAAaC,IAGvB,cAACiC,EAAA,EAAD,CAAM1D,UAAWb,EAAQlB,KAAzB,SACE,cAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsF,WAAW,SAAvC,SACGK,EACGA,EAAK9B,KAAI,SAACiC,EAAKhC,GAAN,OACP,cAAChE,EAAA,EAAD,yBAAkBK,MAAI,GAAK/B,GAA3B,aACE,qBACEqB,UAAWb,EAAQ8G,IACnBK,IAAI,aACJC,IACE,UACOC,mBADP,sBACmDH,EAAIxB,aANlDR,MAYb,Y,UC9CGtG,eAAW,CACxBE,KAAM,CACJC,QAAS,QAEXuI,UAAW,CACT3F,UAAW,YCsEAO,gBAPS,SAACC,GAAD,MAAY,CAClCG,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1BkF,UAAWpF,EAAM+B,SAASqD,aAGbrF,EAtES,SAAC,GAA8C,IAA5CI,EAA2C,EAA3CA,KAAMF,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAakF,EAAgB,EAAhBA,UAC9CvH,EAAUC,KAChB,OACE,cAACsE,EAAA,EAAD,CAAM1D,UAAWb,EAAQlB,KAAzB,SACE,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASqF,WAAW,SAA9C,UACE,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,cAACP,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACC,EAAA,EAAD,WACE,gDACA,gDACA,qDAGJ,cAACN,EAAA,EAAD,CAAMK,MAAI,EAACG,MAAO,CAAEzC,MAAO,QAA3B,SACE,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsF,WAAW,SAAvC,UACE,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2H,GAAA,EAAD,CACEjI,MAAM,UACNmD,QAAS,WACHN,GAAUC,GAAeC,GAC3BF,EAAOO,KAAKC,KAAKC,UAAU,CACzBb,KAAM,yBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbuE,YAAa,OATvB,oBAgBF,cAACvG,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2B,EAAA,EAAD,CAAYX,UAAWb,EAAQsH,UAAW7F,QAAQ,KAAlD,SACG8F,MAGL,cAACrG,EAAA,EAAD,CAAMK,MAAI,EAAC9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC2H,GAAA,EAAD,CACEjI,MAAM,UACNmD,QAAS,WACHN,GAAUC,GAAeC,GAC3BF,EAAOO,KAAKC,KAAKC,UAAU,CACzBb,KAAM,yBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbuE,WAAY,OATtB,iCC7CC7I,gBAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJC,QAAS,YCWPS,GAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAGA6H,GAAqB,CACzBjI,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAoESqC,gBAPS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAMC,OAAOA,OACrBE,KAAMH,EAAMI,KAAKD,KACjBD,YAAaF,EAAMC,OAAOC,YAC1B4B,OAAQ9B,EAAM+B,SAASD,UAGV/B,CAAyBpC,aAjErB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASqC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClDpC,IAAM+G,WAAU,WACV7E,GAAUE,GAAQD,IACpBD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,QAInBd,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,uBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,WAKpB,CAACd,EAAQC,EAAaC,IAEzB,IAAMtC,EAAUC,KAEhB,OACE,eAACiB,EAAA,EAAD,CAAML,UAAWb,EAAQlB,KAAMqC,WAAS,EAACC,QAAS,EAAlD,UACE,cAACF,EAAA,EAAD,yBAAMK,MAAI,GAAKmG,IAAf,aACE,cAACzF,EAAA,EAAD,CACEwC,WAAS,EACT/B,QAAS,WACP/D,EAAKgJ,UACLC,aAAaC,QACb9H,EAAQkB,KAAK,WALjB,yBAUF,cAACC,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,IAAf,aACE,cAAC,EAAD,OAEF,cAAC0B,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,IAAf,aACE,cAAC,EAAD,OAEF,cAAC0B,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,IAAf,aACE,cAAC,EAAD,OAEF,cAAC0B,EAAA,EAAD,yBAAMK,MAAI,GAAKmG,IAAf,aACE,cAAC,GAAD,OAEF,cAACxG,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,IAAf,aACE,cAAC,GAAD,c,8BCjFOZ,gBAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJC,QAAS,OACTiF,OAAQ,QAEVE,SAAU,CACRF,OAAQ,OACRF,UAAW,QAEbgE,WAAY,CACV9D,OAAQ,QAEVD,MAAO,CACLC,OAAQ,IAEV9E,OAAQ,CACNC,gBAAiBN,EAAMO,QAAQC,QAAQC,KACvCC,MAAO,YCnBEwI,GAAa,wBACbC,GACX,wCACWC,GAAsB,iCACtBC,GAAmB,8BACnBC,GAAmB,8BAEnBC,GAAY,SAACnE,GAAD,MAAa,CACpCjC,KAAM+F,GACNjF,QAASmB,IAuBL8B,GAAgB,CACpB9B,OAAQ,GACRoE,eAAgB,KAChBjD,qBAAsB,GACtB4B,YAAa,GACbO,UAAW,GAwCEe,GArCS,WAA+C,IAA9CnG,EAA6C,uDAArC4D,GAAqC,yCAApB/D,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,QACtD,OAAQd,GACN,KAAK+F,GACH,OAAO,2BACF5F,GADL,IAEE8B,OAAQnB,IAGZ,KAAKmF,GACH,OAAO,2BACF9F,GADL,IAEEkG,eAAgBvF,IAGpB,KAAKkF,GACH,OAAO,2BACF7F,GADL,IAEEiD,qBAAsBtC,IAG1B,KAAKoF,GACH,OAAO,2BACF/F,GADL,IAEE6E,YAAalE,IAGjB,KAAKqF,GACH,OAAO,2BACFhG,GADL,IAEEoF,UAAWzE,IAGf,QACE,OAAOX,ICtDP3C,GAAY,CAChBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAGA0I,GAAiB,CACrB9I,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAGA2I,GAAc,CAClB/I,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GA2OSqC,gBAbS,SAACC,GAAD,MAAY,CAClCG,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1BoG,SAAUtG,EAAMC,OAAOqG,SACvBxE,OAAQ9B,EAAM+B,SAASD,OACvBoE,eAAgBlG,EAAM+B,SAASmE,mBAGN,SAAChC,GAAD,MAAe,CACxCqC,kBAAmB,SAACvF,GAAD,OAAakD,EDpQD,SAAClD,GAAD,MAAc,CAC7CnB,KAAMiG,GACNnF,QAASK,GCkQgCuF,CAAkBvF,QAG9CjB,CAGbpC,aA3OmB,SAAC,GASf,IARL6I,EAQI,EARJA,MACArG,EAOI,EAPJA,KACAF,EAMI,EANJA,OACAC,EAKI,EALJA,YAEA4B,GAGI,EAJJwE,SAII,EAHJxE,QACAyE,EAEI,EAFJA,kBACAL,EACI,EADJA,eAMMlF,EAAUwF,EAAMzB,IAAI0B,MAAM,KAAK,GAC/BC,EAAe5E,EAAOd,GACtB2F,EAAkBD,EAAeA,EAAa3E,SAAW,GAE/DhE,IAAM+G,WAAU,WACdyB,EAAkBvF,KACjB,CAACkF,IAEJnI,IAAM+G,WAAU,WAEV7E,GAAUE,GAAQD,GACpBD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbC,QAASkF,QAIhB,CAACjG,EAAQC,EAAaC,IAEzB,IAAMtC,EAAUC,KA5BZ,EA8B0BC,IAAMC,SAAS,IA9BzC,mBA8BG4I,EA9BH,KA8BYC,EA9BZ,OA+BoB9I,IAAMC,SAAS,MA/BnC,mBA+BG8I,EA/BH,KA+BSC,EA/BT,KAiCJhJ,IAAM+G,WAAU,WACVgC,GAAQA,EAAKE,UACfF,EAAKE,SAAS,CACZC,IAAK,QAER,CAACH,EAAMhF,IAyDV,OACE,eAAC/C,EAAA,EAAD,CAAML,UAAWb,EAAQlB,KAAMqC,WAAS,EAAxC,UACE,cAACD,EAAA,EAAD,yBACEL,UAAWb,EAAQkE,SACnB3C,MAAI,GACA/B,IAHN,IAIE6J,IAAK,SAAC5I,GAAD,OAAOyI,EAAQzI,IAJtB,SAME,cAACiE,EAAA,EAAD,CAAMC,OAAK,EAAX,SACGmE,EACGA,EAAgB7D,KAAI,SAAC8D,EAAS7D,GAC5B,IAAIQ,EAAUqD,EAAQrD,QAmBtB,GAhBI,sBAAsB4D,KAAK5D,KAC7BA,EACE,eAAC6D,GAAA,EAAD,WACE,uBACA,qBACEnC,IAAG,UA/GnBC,6BA+GmB,YAAmB3B,GACtBhE,MAAO,CAAEzC,MAAO,cAMN,wGAAwGqK,KACxH5D,GAGe,CACf,IAAI8D,EAAQ9D,EAAQiD,MAClB,0GAGFa,EAAMC,SAAQ,SAACC,GACbhE,EAAUA,EAAQiE,QAAQD,EAAM,QAGlC,IAAIE,EAAOlE,EAAQkD,MAAM,KAEzBlD,EACE,+BACGkE,EAAK3E,KAAI,SAAC4E,EAAG3E,GAAJ,OACR,iCACG2E,EACAL,EAAMtE,GACL,cAAC4E,GAAA,EAAD,CAAMC,KAAMP,EAAMtE,GAAQxE,OAAO,SAAjC,SACG8I,EAAMtE,KAEP,KAAM,MANDA,QAanB,OACE,eAACzC,EAAA,EAAD,WACE,cAACuH,GAAA,EAAD,UACE,kDAEF,cAACxG,EAAA,EAAD,CACEnE,QACE,eAACkK,GAAA,EAAD,WACE,sBAAM7H,MAAO,CAAEnC,MAAOwJ,EAAQxJ,OAA9B,SACGwJ,EAAQvD,QAEX,0CAAWuD,EAAQtD,UAAnB,SACA,+BAAOC,WAXAR,MAkBnB,UAIR,cAAChE,EAAA,EAAD,yBAAMK,MAAI,GAAK/B,IAAf,aACE,uBAAOoB,KAAK,aAAaoB,KAAK,OAAOD,SAnIlB,SAACtB,GAGxB,IAFA,IAAIwJ,EAAWxJ,EAAEC,OAAOwJ,MAEfC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CAAC,IACrCE,EAAOJ,EAASE,GASdG,EAPN,WAEE,IADA,IAAIC,EAAM,GACDJ,EAAI,EAAGA,EAAI,EAAGA,IACrBI,GAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAcC,WAEvC,OAAOJ,EAEcK,GAEvBP,EAAKQ,KAAOP,EACZ,IAAIQ,EAAa,IAAIC,WACrBD,EAAWE,OAAS,SAAUvK,KAW9BqK,EAAWG,cAAcZ,UA0GzB,cAACnJ,EAAA,EAAD,yBAAML,UAAWb,EAAQ8H,WAAYvG,MAAI,GAAK/B,IAA9C,aACE,sBAAM0L,aAAa,MAAMpK,SAvGV,SAACL,GACpBA,EAAEM,iBACEqB,GAAUC,GAAeC,IAC3BF,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,wBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbC,QAASA,EACTuC,QAASqD,MAIfC,EAAW,MAyFT,SACE,eAAC9H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsF,WAAW,SAASyE,QAAQ,SAAxD,UACE,cAACjK,EAAA,EAAD,yBAAMK,MAAI,GAAKgH,IAAf,aACE,cAAC3G,EAAA,EAAD,CACE4C,WAAY,CAAE3D,UAAWb,EAAQ+D,OACjCnD,KAAK,UACLD,MAAOoI,EACPtH,QAAQ,WACRyJ,aAAa,MACbzG,WAAS,EACT1C,SAtJO,SAACtB,GAAO,IACnBE,EAAUF,EAAEC,OAAZC,MACRqI,EAAWrI,SAuJH,cAACO,EAAA,EAAD,yBAAMK,MAAI,GAAKiH,IAAf,aACE,cAACvG,EAAA,EAAD,CACEpB,UAAS,UAAKb,EAAQ+D,MAAb,YAAsB/D,EAAQd,QACvCuF,WAAS,EACTzC,KAAK,SACLP,QAAQ,WAJV,oCCxMCS,gBAJS,SAACC,GAAD,MAAY,CAClCG,KAAMH,EAAMI,KAAKD,QAGJJ,EAnCG,SAAC,GAAc,IAAZI,EAAW,EAAXA,KACnB,OACE,cAAC8I,EAAA,EAAD,CAAWvK,UAAU,MAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwK,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACNjJ,EAAO,cAAC,IAAD,CAAUkJ,GAAG,YAAe,cAAC,IAAD,CAAUA,GAAG,cAGpD,cAAC,IAAD,CACEH,OAAK,EACLC,KAAK,SACLC,OAAQ,kBAAOjJ,EAAO,cAAC,IAAD,CAAUkJ,GAAG,YAAe,cAAC,EAAD,OAEpD,cAAC,IAAD,CACEH,OAAK,EACLC,KAAK,UACLC,OAAQ,kBAAOjJ,EAAO,cAAC,GAAD,IAAiB,cAAC,IAAD,CAAUkJ,GAAG,cAEtD,cAAC,IAAD,CACEH,OAAK,EACLC,KAAK,qBACLC,OAAQ,kBAAOjJ,EAAO,cAAC,GAAD,IAAmB,cAAC,IAAD,CAAUkJ,GAAG,sB,sDCnC1DC,GAAK,IAAIC,UAETrE,kBAIOsE,GAAa,sBACbC,GAAmB,4BACnBC,GAAsB,+BAiB7B9F,GAAgB,CACpB3D,OAAQqJ,GACRpJ,aAAa,GAsBAyJ,GAnBO,WAA+C,IAA9C3J,EAA6C,uDAArC4D,GAAqC,yCAApB/D,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,QACpD,OAAQd,GACN,KAAK2J,GACH,OAAO,2BACFxJ,GADL,IAEEC,OAAQU,IAGZ,KAAK8I,GACH,OAAO,2BACFzJ,GADL,IAEEE,YAAaS,IAGjB,QACE,OAAOX,I,YCvCH4J,I,YAMeC,IANzB,SAAUD,KAAV,iEACE,OADF,SACQE,aAAUJ,GAAD,UAAsB,qFACnC,OADgD/I,EAAb,EAAaA,QAAb,SAC7BoJ,aAAI9D,GAAUtF,IADe,2CADvC,wCAMe,SAAUkJ,KAAV,iEACb,OADa,SACPG,aAAI,CAACC,aAAKL,MADH,wC,aCJTM,GAAgB,CACpBC,IAAK,OACLC,Q,QAAAA,EACAC,UAAW,CAAC,OAAQ,aAGhBC,GAAcC,aAAgB,CAClCnK,KAAM2D,EACNhC,SAAUoE,GACVlG,OAAQ0J,KAGKa,gBAAeN,GAAeI,ICZvCG,GAAiBC,eAEjBC,GAAc,CAACF,IAERG,GAAQC,aAAYP,GAAaQ,KAAe,WAAf,EAAmBH,KAEjEF,GAAeM,IAAIlB,IAEZ,ICGKmB,GDHCC,GAAYC,aAAaN,ICCtC5G,QAAQmH,KAAO,kBAIgBC,WAApBC,SAASC,QACT,SACTN,GAAmB,oBACmB,qBAAtBK,SAASE,UAChB,WACTP,GAAmB,sBACuB,qBAA1BK,SAASG,eAChB,eACTR,GAAmB,0BAGrB,IAiKejL,gBAnBS,SAACC,GAAD,MAAY,CAClCG,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1B4B,OAAQ9B,EAAM+B,SAASD,WAGE,SAACoC,GAAD,MAAe,CACxCuH,kBAAmB,SAAC3J,GAAD,OAAYoC,EJlKA,SAACpC,GAAD,MAAa,CAC5CjC,KAAM6J,GACN/I,QAASmB,GIgK+B2J,CAAkB3J,KAC1DmE,UAAW,SAACnE,GAAD,OAAYoC,EAAS+B,GAAUnE,KAC1C6B,QAAS,SAACxD,GAAD,OAAU+D,EAASP,EAAQxD,KACpCuL,wBAAyB,SAAC3J,GAAD,OACvBmC,EPzKmC,SAACnC,GAAD,MAAe,CACpDlC,KAAMgG,GACNlF,QAASoB,GOuKE2J,CAAwB3J,KACnC4J,UAAW,SAAC1L,GAAD,OAAYiE,EJjLA,SAACjE,GAAD,MAAa,CACpCJ,KAAM2J,GACN7I,QAASV,GI+KuB0L,CAAU1L,KAC1C2L,eAAgB,SAAChH,GAAD,OAAUV,EPtKE,SAACU,GAAD,MAAW,CACvC/E,KAAMkG,GACNpF,QAASiE,GOoK0BgH,CAAehH,KAClDiH,eAAgB,SAACC,GAAD,OAAW5H,EPlKC,SAAC4H,GAAD,MAAY,CACxCjM,KAAMmG,GACNrF,QAASmL,GOgK2BD,CAAeC,KACnDC,eAAgB,SAAC7L,GAAD,OAAiBgE,EJ/KL,SAAChE,GAAD,MAAkB,CAC9CL,KAAM4J,GACN9I,QAAST,GI6KiC6L,CAAe7L,QAG5CH,EAjKW,SAAC,GAWpB,IAVLI,EAUI,EAVJA,KACAF,EASI,EATJA,OACAC,EAQI,EARJA,YACAuL,EAOI,EAPJA,kBACAxF,EAMI,EANJA,UAEA8F,GAII,EALJJ,UAKI,EAJJI,gBACAL,EAGI,EAHJA,wBACAE,EAEI,EAFJA,eACAC,EACI,EADJA,eAiIA,OA/HA9N,IAAM+G,WAAU,WACT7E,IAELA,EAAO+L,OAAS,WACdD,GAAe,IAGjB9L,EAAOgM,UAAY,YAAe,IAAZC,EAAW,EAAXA,KAEdrM,GADNqM,EAAOzL,KAAK0L,MAAMD,IACArM,KACZc,EAAUuL,EAAKvL,QAErB,OAAQd,GACN,IAAK,iBACH,IAAKM,EAAM,OACXwD,EAAQ,2BACHxD,GADE,IAEL/C,MAAOuD,EAAQvD,SAEjB,MAEF,IAAK,sBACH,IAAMgP,EAAmBzL,EAAQmB,OAAOuK,QAAO,SAACC,EAAK5E,GAEnD,OADA4E,EAAI5E,EAAE1G,SAAW0G,EACV4E,IACN,IACHb,EAAkBW,GAClB,MAEF,IAAK,yBACH,IAAMxH,EAAOjE,EAAQ4L,UACrBX,EAAehH,GACf,MAEF,IAAK,wBACH,IAAM9C,EAAS8I,GAAM4B,WAAWzK,SAASD,OACzCmE,EAAU,2BACLnE,GADI,kBAENnB,EAAQK,QAAU,CACjBA,QAASL,EAAQK,QACjBM,UAAWX,EAAQW,cAGvB,MAEF,IAAK,sBACH2E,EAAU,2BACL2E,GAAM4B,WAAWzK,SAASD,QADtB,kBAENnB,EAAQK,QAFF,YAAC,eAGH4J,GAAM4B,WAAWzK,SAASD,OAAOnB,EAAQK,UAHvC,IAILe,SAAUpB,EAAQoB,cAGtB,MAEF,IAAK,yBAEH,MAEF,IAAK,yBACH,IAAMD,EAAS8I,GAAM4B,WAAWzK,SAASD,OACzCmE,EAAU,2BACLnE,GADI,kBAENnB,EAAQK,QAFF,YAAC,eAGHc,EAAOnB,EAAQK,UAHb,IAILe,SAAS,GAAD,oBACFD,EAAOnB,EAAQK,SAAf,SACAc,EAAOnB,EAAQK,SAAf,SACA,IAHE,CAIN,CACEA,QAASL,EAAQK,QACjByL,YAAa9L,EAAQ8L,YACrBpJ,MAAO1C,EAAQ0C,MACfjG,MAAOuD,EAAQvD,MACfkG,UAAW3C,EAAQ2C,UACnBC,QAAS5C,EAAQ4C,gBAKzB,MAEF,IAAK,wBACHmI,EAAwB/K,EAAQoB,UAChC,MAEF,IAAK,uBACH,IAAMmE,EAAiB0E,GAAM4B,WAAWzK,SAASmE,eAC3C/F,EAAOyK,GAAM4B,WAAWpM,KAAKD,KAC7BF,EAAS2K,GAAM4B,WAAWvM,OAAOA,OAEnCA,GAAUE,GAAQD,GACpBD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,qBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,IACbC,QAASkF,MAKjB,MAEF,IAAK,wBACH2F,EAAelL,EAAQmL,YAS5B,CAAC7L,EAAQ0D,IAEZ5F,IAAM+G,WAAU,WACd4H,OAAOC,iBAAiB,SAAS,eAIjCtB,SAASsB,iBAAiB3B,IAAkB,iBAG3C,IAEI,Q,uCChKMtO,GAXD,CACZO,QAAS,CACPC,QAAS,CACPC,KAAM,WAERoE,UAAW,CACTpE,KAAM,UC0EZ,IAae4C,gBAbS,SAACC,GAAD,MAAY,CAClC6D,gBAAiB7D,EAAMI,KAAKyD,gBAC5B1D,KAAMH,EAAMI,KAAKD,KACjBF,OAAQD,EAAMC,OAAOA,OACrBC,YAAaF,EAAMC,OAAOC,YAC1B4B,OAAQ9B,EAAM+B,SAASD,WAGE,SAACoC,GAAD,MAAe,CACxCP,QAAS,SAACxD,GAAD,OAAU+D,EAASP,EAAQxD,KACpC8F,UAAW,SAACnE,GAAD,OAAYoC,EAAS+B,GAAUnE,QAG7B/B,EAzEf,YAOI,IANFE,EAMC,EANDA,OACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,KACA0D,EAGC,EAHDA,gBACAF,EAEC,EAFDA,QAGMiJ,GADL,EADD3G,UAEwB4G,aAAc,iCAEtC9O,IAAM+G,WAAU,WAEdtI,EAAKsQ,mBAAL,+BAAAC,EAAA,MAAwB,WAAO5M,GAAP,eAAA4M,EAAA,yDACjB5M,EADiB,yCACJwD,EAAQxD,IADJ,uBAGFA,EAAK6M,YAAW,GAHd,OAGhBnM,EAHgB,OAKtBV,EAAKU,MAAQA,EAEb8C,EAAQxD,GAPc,2CAAxB,yDAUC,IAEHpC,IAAM+G,WAAU,WACV7E,GAAUE,GAAQD,GACpBD,EAAOO,KACLC,KAAKC,UAAU,CACbb,KAAM,gBACNc,QAAS,CACPC,IAAKT,EAAKU,MACVC,OAAQX,EAAKY,UAIpB,CAACd,EAAQE,IAEZ,IAAM8M,EAAalP,IAAMmP,SACvB,kBACEC,aAAe,2BACVzQ,IADS,IAEZO,QAAQ,2BACHP,GAAMO,SADJ,IAEL4C,KAAM+M,GAAmB/I,EAAkB,OAAS,eAG1D,CAAC+I,EAAiB/I,IAGpB,OACE,cAAC,KAAD,CAAeuJ,SAAUlI,aAAzB,SACE,eAACmI,GAAA,EAAD,CAAe3Q,MAAOuQ,EAAtB,UACE,cAACK,GAAA,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Y,SC9DOC,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCKdQ,IAAS5E,OACP,cAAC,IAAM6E,WAAP,UACE,cAAC,IAAD,CAAUrD,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaK,UAAWA,GAAxB,SACE,cAAC,GAAD,UAINI,SAAS6C,eAAe,SAM1BX,O","file":"static/js/main.b7d6a03c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCSqIX7JgOxs-W0KSP11rWgg_Smyq3dRr0',\r\n  authDomain: 'platychat.firebaseapp.com',\r\n  databaseURL: 'https://platychat.firebaseio.com',\r\n  projectId: 'platychat',\r\n  storageBucket: 'platychat.appspot.com',\r\n  messagingSenderId: '540254856882',\r\n  appId: '1:540254856882:web:5eb0db85a5670ceb77cbab',\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\n\r\nexport default firebase\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n  formElement: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: '#fff',\r\n    '&:hover': {\r\n      color: '#000',\r\n    },\r\n  },\r\n}))\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { auth } from '../../firebase/firebase.utils'\r\n\r\nimport { Grid, Button, TextField, Typography } from '@material-ui/core'\r\n\r\nimport useStyles from './login.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 6,\r\n  lg: 6,\r\n  xl: 6,\r\n}\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const classes = useStyles()\r\n\r\n  const [loginForm, setLoginForm] = React.useState({\r\n    username: '',\r\n    password: '',\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    auth.signInWithEmailAndPassword(loginForm.username, loginForm.password)\r\n    history.push('/convos')\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { value, name } = e.target\r\n\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} direction='column' alignContent='center'>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h5' style={{ textAlign: 'center' }}>\r\n            Platychat <span>&#x1f986;</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='username'\r\n            variant='outlined'\r\n            size='small'\r\n            placeholder='email'\r\n            value={loginForm.username}\r\n            onChange={handleChange}\r\n            className={classes.formElement}\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='password'\r\n            type='password'\r\n            variant='outlined'\r\n            placeholder='password'\r\n            size='small'\r\n            value={loginForm.password}\r\n            onChange={handleChange}\r\n            className={classes.formElement}\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <Button\r\n            className={`${classes.button} ${classes.formElement}`}\r\n            type='submit'\r\n            variant='contained'>\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(LoginPage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { ListItem, ListItemText, ListItemIcon, Badge } from '@material-ui/core'\r\n\r\n//Icons\r\nimport MessageIcon from '@material-ui/icons/Message'\r\n\r\nconst ConvoListItem = ({ user, socket, isConnected, convo, history }) => {\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={() => {\r\n        if (isConnected) {\r\n          socket.send(\r\n            JSON.stringify({\r\n              type: 'convo-join-request',\r\n              payload: {\r\n                jwt: user.token,\r\n                userid: user.uid,\r\n                convoid: convo.convoid,\r\n              },\r\n            })\r\n          )\r\n\r\n          history.push(`/messages/${convo.convoid}`)\r\n        }\r\n      }}>\r\n      <ListItemIcon>\r\n        <Badge badgeContent={convo.unreadCount} color='primary'>\r\n          <MessageIcon />\r\n        </Badge>\r\n      </ListItemIcon>\r\n      <ListItemText primary={convo.convoname} secondary={convo.participants} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  user: state.base.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ConvoListItem)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  convoList: { maxHeight: '240px', overflowY: 'auto' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  List,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport ConvoListItem from '../convo-list-item/convo-list-item.components'\r\n\r\nimport useStyles from './convos-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst ConvosCard = ({ history, convos, user, socket, isConnected }) => {\r\n  const classes = useStyles()\r\n\r\n  const [inputFields, setInputFields] = React.useState({\r\n    convoName: '',\r\n    messagesFilter: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setInputFields({\r\n      ...inputFields,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h6'>Messages</Typography>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container>\r\n            <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name='convoName'\r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder='Convo Name...'\r\n                onChange={handleChange}\r\n                value={inputFields.convoName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  if(socket && user && isConnected)\r\n                    socket.send(JSON.stringify({\r\n                      type: 'convo-create-request',\r\n                      payload: {\r\n                        jwt: user.token,\r\n                        userid: user.uid,\r\n                        convoname: inputFields.convoName\r\n                      }\r\n                    }))\r\n\r\n                  //socket.emit(\r\n                  //  'convo-create-request',\r\n                  //  user.token,\r\n                  //  user.uid,\r\n                  //  inputFields.convoName\r\n                  //)\r\n                  setInputFields({ ...inputFields, convoName: '' })\r\n                }}>\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container>\r\n            <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name='messagesFilter'\r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder='Search...'\r\n                value={inputFields.messagesFilter}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Button className={classes.input} fullWidth>\r\n                Filter\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid className={classes.convoList} item {...gridSizes}>\r\n          <List dense>\r\n            {Object.keys(convos)\r\n              .sort((convo1, convo2) => {\r\n                if (convos[convo1].unreadCount > convos[convo2].unreadCount)\r\n                  return -1\r\n                if (convos[convo1].unreadCount < convos[convo2].unreadCount)\r\n                  return 1\r\n                return 0\r\n              })\r\n              .map((convo, index) => (\r\n                <ConvoListItem\r\n                  key={index}\r\n                  convo={convos[convo]}\r\n                  history={history}\r\n                />\r\n              ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  convos: state.messages.convos,\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(ConvosCard))\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  messageResults: { maxHeight: '240px', overflowY: 'auto' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport useStyles from './search-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst SearchCard = ({ socket, isConnected, user, messageSearchResults }) => {\r\n  const classes = useStyles()\r\n\r\n  const [searchText, setSearchText] = React.useState('')\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='searchMessages'\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <Button\r\n            fullWidth\r\n            variant='contained'\r\n            onClick={() => {\r\n              if (socket && isConnected && user)\r\n                socket.send(\r\n                  JSON.stringify({\r\n                   type: 'convo-search-request',\r\n                    payload: {\r\n                      jwt: user.token,\r\n                      userid: user.uid,\r\n                      searchText: searchText\r\n                   },\r\n                 })\r\n                )\r\n                //socket.emit(\r\n                //  'convo-search-request',\r\n                //  user.token,\r\n                //  user.uid,\r\n                //  searchText\r\n                //)\r\n              setSearchText('')\r\n            }}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid className={classes.messageResults} item {...gridSizes}>\r\n          <List dense>\r\n            {messageSearchResults\r\n              ? messageSearchResults.map((result, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText>\r\n                      {`${result.alias} (${result.timestamp}) - ${result.rawtext}`}\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                ))\r\n              : null}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  user: state.base.user,\r\n  messageSearchResults: state.messages.messageSearchResults,\r\n})\r\n\r\nexport default connect(mapStateToProps)(SearchCard)\r\n","const SET_DARK_MODE_ENABLED = '[BASE] SET_DARK_MODE_ENABLED'\r\nconst SET_USER = '[BASE] SET_USER'\r\nconst FORCED_RERENDER =\r\n  'lollllllll stay mad idiots, im forcing a rerender using redux, stay mad'\r\n\r\nexport const setDarkModeEnabled = (isDarkModeEnabled) => ({\r\n  type: SET_DARK_MODE_ENABLED,\r\n  payload: isDarkModeEnabled,\r\n})\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  payload: user,\r\n})\r\n\r\nexport const forceRerender = (randomNum) => ({\r\n  type: FORCED_RERENDER,\r\n  payload: randomNum,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  darkModeEnabled: false,\r\n  user: null,\r\n  rerender: 0,\r\n}\r\n\r\nconst baseReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case FORCED_RERENDER: {\r\n      return state\r\n    }\r\n    case SET_DARK_MODE_ENABLED: {\r\n      return {\r\n        ...state,\r\n        darkModeEnabled: payload,\r\n      }\r\n    }\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      }\r\n    }\r\n    case FORCED_RERENDER: {\r\n      console.log('so mad')\r\n      return {\r\n        ...state,\r\n        rerender: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default baseReducer\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Switch,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport { setDarkModeEnabled } from '../../../../redux/base/base.reducer'\r\n\r\nimport useStyles from './settings-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst SettingsCard = ({\r\n  darkModeEnabled,\r\n  setDarkModeEnabled,\r\n  socket,\r\n  isConnected,\r\n  user,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const [alias, setAlias] = React.useState('')\r\n  const [color, setColor] = React.useState('')\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h6'>Settings</Typography>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Typography>Dark Mode</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Switch\r\n                checked={darkModeEnabled}\r\n                onChange={(_, value) => {\r\n                  setDarkModeEnabled(value)\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={6}>\r\n              <Typography>Alias</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                name='alias'\r\n                value={alias}\r\n                onChange={(e) => setAlias(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (user && user.token && socket && isConnected) \r\n                   socket.send(\r\n                     JSON.stringify({\r\n                       type: 'user-alias-request',\r\n                       payload: {\r\n                         jwt: user.token,\r\n                         userid: user.uid,\r\n                         alias: alias\r\n                       },\r\n                     })\r\n                   ) \r\n\r\n                    //socket.emit(\r\n                    //  'user-alias-request',\r\n                    //  user.token,\r\n                    //  user.uid,\r\n                    //  alias\r\n                    //)\r\n                  setAlias('')\r\n                }}\r\n                fullWidth>\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={6}>\r\n              <Typography>Color</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                name='color'\r\n                placeholder='#123abf'\r\n                value={color}\r\n                fullWidth\r\n                onChange={(e) => setColor(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (user && user.token && socket)\r\n                    socket.send(\r\n                      JSON.stringify({\r\n                        type: 'user-color-request',\r\n                        payload: {\r\n                          jwt: user.token,\r\n                          userid: user.uid,\r\n                          color: color\r\n                        },\r\n                      })\r\n                    )\r\n                    //socket.emit(\r\n                    //  'user-color-request',\r\n                    //  user.token,\r\n                    //  user.uid,\r\n                    //  color\r\n                    //)\r\n                  setColor('')\r\n                }}\r\n                fullWidth>\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  darkModeEnabled: state.base.darkModeEnabled,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  user: state.base.user,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDarkModeEnabled: (isDarkModeEnabled) =>\r\n    dispatch(setDarkModeEnabled(isDarkModeEnabled)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsCard)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: {\r\n    padding: '20px',\r\n    maxHeight: '480px',\r\n    overflowY: 'auto',\r\n  },\r\n  img: {\r\n    width: '100%',\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Card } from '@material-ui/core'\r\n\r\nimport useStyles from './gallery-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 3,\r\n  lg: 3,\r\n  xl: 3,\r\n}\r\n\r\nconst GalleryCard = ({ socket, isConnected, user, urls }) => {\r\n  const classes = useStyles()\r\n\r\n  React.useEffect(() => {\r\n    if (socket && isConnected && user)\r\n      socket.send(\r\n        JSON.stringify({\r\n          type: 'convo-gallery-request',\r\n          payload: {\r\n            jwt: user.token,\r\n            userid: user.uid,\r\n          },\r\n        })\r\n      )\r\n  }, [socket, isConnected, user])\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container spacing={1} alignItems='center'>\r\n        {urls\r\n          ? urls.map((url, index) => (\r\n              <Grid key={index} item {...gridSizes}>\r\n                <img\r\n                  className={classes.img}\r\n                  alt='happy-face'\r\n                  src={\r\n                    process.env.NODE_ENV === 'production'\r\n                      ? `${process.env.REACT_APP_PROD_URL}/platychat/${url.rawtext}`\r\n                      : `${process.env.REACT_APP_DEV_URL}/platychat/${url.rawtext}`\r\n                  }\r\n                />\r\n              </Grid>\r\n            ))\r\n          : null}\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  urls: state.messages.galleryUrls,\r\n})\r\n\r\nexport default connect(mapStateToProps)(GalleryCard)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n  alignText: {\r\n    textAlign: 'center',\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Card, Grid, Typography, Fab } from '@material-ui/core'\r\n\r\nimport useStyles from './suck-counter-card.styles'\r\n\r\nconst SuckCounterCard = ({ user, socket, isConnected, suckCount }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container direction='column' alignItems='center'>\r\n        <Grid item>\r\n          <Typography variant='h6'>SUCK COUNTER</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <span>&#x1f61b;</span>\r\n            <span>&#x1f61b;</span>\r\n            <span>&#x1f61b;</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ width: '100%' }}>\r\n          <Grid container spacing={1} alignItems='center'>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Fab\r\n                color='primary'\r\n                onClick={() => {\r\n                  if (socket && isConnected && user)\r\n                    socket.send(JSON.stringify({\r\n                      type: 'suck-increment-request',\r\n                      payload: {\r\n                        jwt: user.token,\r\n                        userid: user.uid,\r\n                        valueToAdd: -1\r\n                      }\r\n                    }))\r\n                }}>\r\n                OPPS\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n              <Typography className={classes.alignText} variant='h1'>\r\n                {suckCount}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Fab\r\n                color='primary'\r\n                onClick={() => {\r\n                  if (socket && isConnected && user)\r\n                    socket.send(JSON.stringify({\r\n                      type: 'suck-increment-request',\r\n                      payload: {\r\n                        jwt: user.token,\r\n                        userid: user.uid,\r\n                        valueToAdd: 1\r\n                      }\r\n                    }))\r\n                }}>\r\n                SUCK\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  suckCount: state.messages.suckCount,\r\n})\r\n\r\nexport default connect(mapStateToProps)(SuckCounterCard)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n}))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { auth } from '../../firebase/firebase.utils'\r\n\r\nimport { Grid, Button } from '@material-ui/core'\r\n\r\nimport ConvosCard from './components/convos-card/convos-card.components'\r\nimport SearchCard from './components/search-card/search-card.components'\r\nimport SettingsCard from './components/settings-card/settings-card.components'\r\nimport GalleryCard from './components/gallery-card/gallery-card.components'\r\nimport SuckCounterCard from './components/suck-counter-card/suck-counter-card.components'\r\n\r\nimport useStyles from './convos.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 4,\r\n  lg: 4,\r\n  xl: 4,\r\n}\r\n\r\nconst fullWidthGridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst ConvosPage = ({ history, socket, isConnected, user }) => {\r\n  React.useEffect(() => {\r\n    if (socket && user && isConnected) {\r\n      socket.send(\r\n        JSON.stringify({\r\n          type: 'convo-list-request',\r\n          payload: {\r\n            jwt: user.token,\r\n            userid: user.uid,\r\n          },\r\n        })\r\n      )\r\n      socket.send(\r\n        JSON.stringify({\r\n          type: 'suck-counter-request',\r\n          payload: {\r\n            jwt: user.token,\r\n            userid: user.uid,\r\n          },\r\n        })\r\n      )\r\n    }\r\n  }, [socket, isConnected, user])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid className={classes.root} container spacing={1}>\r\n      <Grid item {...fullWidthGridSizes}>\r\n        <Button\r\n          fullWidth\r\n          onClick={() => {\r\n            auth.signOut()\r\n            localStorage.clear()\r\n            history.push('/login')\r\n          }}>\r\n          Sign Out\r\n        </Button>\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <ConvosCard />\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <SearchCard />\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <SettingsCard />\r\n      </Grid>\r\n      <Grid item {...fullWidthGridSizes}>\r\n        <GalleryCard />\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <SuckCounterCard />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  user: state.base.user,\r\n  isConnected: state.socket.isConnected,\r\n  convos: state.messages.convos,\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(ConvosPage))\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n    height: '90vh',\r\n  },\r\n  messages: {\r\n    height: '80vh',\r\n    overflowY: 'auto',\r\n  },\r\n  inputGroup: {\r\n    height: '10vh',\r\n  },\r\n  input: {\r\n    height: 38,\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: '#fff',\r\n  },\r\n}))\r\n","export const SET_CONVOS = '[MESSAGES] SET_CONVOS'\r\nexport const SET_MESSAGE_SEARCH_RESULTS =\r\n  '[MESSAGES] SET_MESSAGE_SEARCH_RESULTS'\r\nexport const SET_CURRENT_CONVOID = '[MESSAGES] SET_CURRENT_CONVOID'\r\nexport const SET_GALLERY_URLS = '[MESSAGES] SET_GALLERY_URLS'\r\nexport const SET_SUCK_COUNTER = '[MESSAGES] SET_SUCK_COUNTER'\r\n\r\nexport const setConvos = (convos) => ({\r\n  type: SET_CONVOS,\r\n  payload: convos,\r\n})\r\n\r\nexport const setCurrentConvoid = (convoid) => ({\r\n  type: SET_CURRENT_CONVOID,\r\n  payload: convoid,\r\n})\r\n\r\nexport const setMessageSearchResults = (messages) => ({\r\n  type: SET_MESSAGE_SEARCH_RESULTS,\r\n  payload: messages,\r\n})\r\n\r\nexport const setGalleryUrls = (urls) => ({\r\n  type: SET_GALLERY_URLS,\r\n  payload: urls,\r\n})\r\n\r\nexport const setSuckCounter = (count) => ({\r\n  type: SET_SUCK_COUNTER,\r\n  payload: count,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  convos: {},\r\n  currentConvoid: null,\r\n  messageSearchResults: [],\r\n  galleryUrls: [],\r\n  suckCount: 0,\r\n}\r\n\r\nconst messagesReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_CONVOS: {\r\n      return {\r\n        ...state,\r\n        convos: payload,\r\n      }\r\n    }\r\n    case SET_CURRENT_CONVOID: {\r\n      return {\r\n        ...state,\r\n        currentConvoid: payload,\r\n      }\r\n    }\r\n    case SET_MESSAGE_SEARCH_RESULTS: {\r\n      return {\r\n        ...state,\r\n        messageSearchResults: payload,\r\n      }\r\n    }\r\n    case SET_GALLERY_URLS: {\r\n      return {\r\n        ...state,\r\n        galleryUrls: payload,\r\n      }\r\n    }\r\n    case SET_SUCK_COUNTER: {\r\n      return {\r\n        ...state,\r\n        suckCount: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default messagesReducer\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Button,\r\n  TextField,\r\n  Link,\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./messages.styles\";\r\nimport { setCurrentConvoid } from \"../../redux/messages/messages.reducer\";\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n};\r\n\r\nconst textFieldSizes = {\r\n  xs: 10,\r\n  sm: 10,\r\n  md: 10,\r\n  lg: 10,\r\n  xl: 10,\r\n};\r\n\r\nconst buttonSizes = {\r\n  xs: 2,\r\n  sm: 2,\r\n  md: 2,\r\n  lg: 2,\r\n  xl: 2,\r\n};\r\n\r\nconst MessagesPage = ({\r\n  match,\r\n  user,\r\n  socket,\r\n  isConnected,\r\n  uploader,\r\n  convos,\r\n  setCurrentConvoid,\r\n  currentConvoid,\r\n}) => {\r\n  const projectURL =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? process.env.REACT_APP_PROD_URL + process.env.REACT_APP_ROOT_DIRECTORY\r\n      : process.env.REACT_APP_DEV_URL + process.env.REACT_APP_ROOT_DIRECTORY;\r\n  const convoid = match.url.split(\"/\")[2];\r\n  const currentConvo = convos[convoid];\r\n  const currentMessages = currentConvo ? currentConvo.messages : [];\r\n\r\n  React.useEffect(() => {\r\n    setCurrentConvoid(convoid);\r\n  }, [currentConvoid]);\r\n\r\n  React.useEffect(() => {\r\n    // socket.emit('convo-join-request', user.token, user.uid, currentConvoid)\r\n    if (socket && user && isConnected)\r\n      socket.send(\r\n        JSON.stringify({\r\n          type: \"convo-join-request\",\r\n          payload: {\r\n            jwt: user.token,\r\n            userid: user.uid,\r\n            convoid: currentConvoid,\r\n          },\r\n        })\r\n      );\r\n  }, [socket, isConnected, user]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [list, setList] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (list && list.scrollTo)\r\n      list.scrollTo({\r\n        top: 1000000,\r\n      });\r\n  }, [list, convos]);\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    setMessage(value);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    var fileList = e.target.files;\r\n\r\n    for (var i = 0; i < fileList.length; i++) {\r\n      var blob = fileList[i];\r\n\r\n      function _generateRandomString() {\r\n        let ret = \"\";\r\n        for (let i = 0; i < 9; i++) {\r\n          ret += Math.round(Math.random() * 9).toString();\r\n        }\r\n        return ret;\r\n      }\r\n      const fileIdentifier = _generateRandomString();\r\n\r\n      blob.meta = fileIdentifier;\r\n      var fileReader = new FileReader();\r\n      fileReader.onload = function (e) {\r\n        \r\n        // socket.emit(\r\n        //   'convo-message-request',\r\n        //   user.token,\r\n        //   user.uid,\r\n        //   currentConvoid,\r\n        //   '/image ' + fileIdentifier\r\n        // )\r\n        //uploader.submitFiles([blob])\r\n      };\r\n      fileReader.readAsDataURL(blob);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (socket && isConnected && user) {\r\n      socket.send(\r\n        JSON.stringify({\r\n          type: \"convo-message-request\",\r\n          payload: {\r\n            jwt: user.token,\r\n            userid: user.uid,\r\n            convoid: convoid,\r\n            rawtext: message,\r\n          },\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root} container>\r\n      <Grid\r\n        className={classes.messages}\r\n        item\r\n        {...gridSizes}\r\n        ref={(e) => setList(e)}\r\n      >\r\n        <List dense>\r\n          {currentMessages\r\n            ? currentMessages.map((message, index) => {\r\n                let rawtext = message.rawtext;\r\n\r\n                //replace with image tag if image\r\n                if (/images\\/platychat.+/.test(rawtext))\r\n                  rawtext = (\r\n                    <Box>\r\n                      <br></br>\r\n                      <img\r\n                        src={`${projectURL}/${rawtext}`}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Box>\r\n                  );\r\n\r\n                //replace with Link if contains links\r\n                let hasHttpLink = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/.test(\r\n                  rawtext\r\n                );\r\n\r\n                if (hasHttpLink) {\r\n                  let links = rawtext.match(\r\n                    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/g\r\n                  );\r\n\r\n                  links.forEach((link) => {\r\n                    rawtext = rawtext.replace(link, \"~\");\r\n                  });\r\n\r\n                  let text = rawtext.split(\"~\");\r\n\r\n                  rawtext = (\r\n                    <span>\r\n                      {text.map((d, index) => (\r\n                        <span key={index}>\r\n                          {d}\r\n                          {links[index] ? (\r\n                            <Link href={links[index]} target=\"_blank\">\r\n                              {links[index]}\r\n                            </Link>\r\n                          ) : null}{\" \"}\r\n                        </span>\r\n                      ))}\r\n                    </span>\r\n                  );\r\n                }\r\n\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <span>&#x1f997;</span>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Box>\r\n                          <span style={{ color: message.color }}>\r\n                            {message.alias}\r\n                          </span>\r\n                          <span>{` ${message.timestamp} - `}</span>\r\n                          <span>{rawtext}</span>\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })\r\n            : null}\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item {...gridSizes}>\r\n        <input name=\"fileUpload\" type=\"file\" onChange={handleFileChange} />\r\n      </Grid>\r\n\r\n      <Grid className={classes.inputGroup} item {...gridSizes}>\r\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n            <Grid item {...textFieldSizes}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name=\"message\"\r\n                value={message}\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item {...buttonSizes}>\r\n              <Button\r\n                className={`${classes.input} ${classes.button}`}\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n              >\r\n                Send\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  uploader: state.socket.uploader,\r\n  convos: state.messages.convos,\r\n  currentConvoid: state.messages.currentConvoid,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConvoid: (convoid) => dispatch(setCurrentConvoid(convoid)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(MessagesPage));\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport LoginPage from './pages/login/login.components'\r\nimport ConvosPage from './pages/convos/convos.components'\r\nimport MessagesPage from './pages/messages/messages.components'\r\n\r\nconst AppRoutes = ({ user }) => {\r\n  return (\r\n    <Container className='App'>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() =>\r\n            user ? <Redirect to='/convos' /> : <Redirect to='/login' />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path='/login'\r\n          render={() => (user ? <Redirect to='/convos' /> : <LoginPage />)}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/convos'\r\n          render={() => (user ? <ConvosPage /> : <Redirect to='/login' />)}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/messages/:convoid'\r\n          render={() => (user ? <MessagesPage /> : <Redirect to='/login' />)}\r\n        />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppRoutes)\r\n","const ws = new WebSocket(\r\n  process.env.NODE_ENV === 'production'\r\n    ? process.env.REACT_APP_WS_PROD_URL\r\n    : process.env.REACT_APP_WS_DEV_URL\r\n)\r\n\r\nexport const SET_SOCKET = '[SOCKET] SET_SOCKET'\r\nexport const SET_IS_CONNECTED = '[SOCKET] SET_IS_CONNECTED'\r\nexport const CONVO_LIST_RESPONSE = '[SOCKET] CONVO_LIST_RESPONSE'\r\n\r\nexport const setSocket = (socket) => ({\r\n  type: SET_SOCKET,\r\n  payload: socket,\r\n})\r\n\r\nexport const setIsConnected = (isConnected) => ({\r\n  type: SET_IS_CONNECTED,\r\n  payload: isConnected,\r\n})\r\n\r\nexport const convoListResponse = (convos) => ({\r\n  type: CONVO_LIST_RESPONSE,\r\n  payload: convos,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  socket: ws,\r\n  isConnected: false,\r\n}\r\n\r\nconst socketReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_SOCKET: {\r\n      return {\r\n        ...state,\r\n        socket: payload,\r\n      }\r\n    }\r\n    case SET_IS_CONNECTED: {\r\n      return {\r\n        ...state,\r\n        isConnected: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default socketReducer\r\n","import { all, call, put, takeEvery } from 'redux-saga/effects'\r\n\r\nimport { CONVO_LIST_RESPONSE } from './socket/socket.reducer'\r\n\r\nimport { setConvos } from './messages/messages.reducer'\r\n\r\nfunction* convoListResponseSaga() {\r\n  yield takeEvery(CONVO_LIST_RESPONSE, function* ({ payload }) {\r\n    yield put(setConvos(payload))\r\n  })\r\n}\r\n\r\nexport default function* allSagas() {\r\n  yield all([call(convoListResponseSaga)])\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport baseReducer from './base/base.reducer'\r\nimport messagesReducer from './messages/messages.reducer'\r\nimport socketReducer from './socket/socket.reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['base', 'messages'],\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  base: baseReducer,\r\n  messages: messagesReducer,\r\n  socket: socketReducer,\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from 'redux-persist'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport allSagas from './sagas'\r\n\r\nimport rootReducer from './root-reducer.js'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(allSagas)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default { store, persistor }\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"../../redux/store\";\r\n\r\nimport {\r\n  convoListResponse,\r\n  setSocket,\r\n  setIsConnected,\r\n} from \"../../redux/socket/socket.reducer\";\r\nimport {\r\n  setConvos,\r\n  setMessageSearchResults,\r\n  setGalleryUrls,\r\n  setSuckCounter,\r\n} from \"../../redux/messages/messages.reducer\";\r\nimport { setUser } from \"../../redux/base/base.reducer\";\r\n\r\nconsole.warn = () => {};\r\n\r\nlet hidden, visibilityChange;\r\n\r\nif (typeof document.hidden !== undefined) {\r\n  hidden = \"hidden\";\r\n  visibilityChange = \"visibilitychange\";\r\n} else if (typeof document.msHidden !== \"undefined\") {\r\n  hidden = \"msHidden\";\r\n  visibilityChange = \"msvisibilitychange\";\r\n} else if (typeof document.webkitHidden !== \"undefined\") {\r\n  hidden = \"webkitHidden\";\r\n  visibilityChange = \"webkitvisibilitychange\";\r\n}\r\n\r\nconst WebsocketProvider = ({\r\n  user,\r\n  socket,\r\n  isConnected,\r\n  convoListResponse,\r\n  setConvos,\r\n  setSocket,\r\n  setIsConnected,\r\n  setMessageSearchResults,\r\n  setGalleryUrls,\r\n  setSuckCounter,\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.onopen = () => {\r\n      setIsConnected(true);\r\n    };\r\n\r\n    socket.onmessage = ({ data }) => {\r\n      data = JSON.parse(data);\r\n      const type = data.type;\r\n      const payload = data.payload;\r\n\r\n      switch (type) {\r\n        case \"login-response\": {\r\n          if (!user) return;\r\n          setUser({\r\n            ...user,\r\n            color: payload.color,\r\n          });\r\n          break;\r\n        }\r\n        case \"convo-list-response\": {\r\n          const normalizedConvos = payload.convos.reduce((acc, d) => {\r\n            acc[d.convoid] = d;\r\n            return acc;\r\n          }, {});\r\n          convoListResponse(normalizedConvos);\r\n          break;\r\n        }\r\n        case \"convo-gallery-response\": {\r\n          const urls = payload.imageUrls;\r\n          setGalleryUrls(urls);\r\n          break;\r\n        }\r\n        case \"convo-create-response\": {\r\n          const convos = store.getState().messages.convos;\r\n          setConvos({\r\n            ...convos,\r\n            [payload.convoid]: {\r\n              convoid: payload.convoid,\r\n              convoname: payload.convoname,\r\n            },\r\n          });\r\n          break;\r\n        }\r\n        case \"convo-join-response\": {\r\n          setConvos({\r\n            ...store.getState().messages.convos,\r\n            [payload.convoid]: {\r\n              ...store.getState().messages.convos[payload.convoid],\r\n              messages: payload.messages,\r\n            },\r\n          });\r\n          break;\r\n        }\r\n        case \"convo-message-response\": {\r\n          //Nothing yet...\r\n          break;\r\n        }\r\n        case \"convo-message-incoming\": {\r\n          const convos = store.getState().messages.convos;\r\n          setConvos({\r\n            ...convos,\r\n            [payload.convoid]: {\r\n              ...convos[payload.convoid],\r\n              messages: [\r\n                ...(convos[payload.convoid][\"messages\"]\r\n                  ? convos[payload.convoid][\"messages\"]\r\n                  : []),\r\n                {\r\n                  convoid: payload.convoid,\r\n                  todayString: payload.todayString,\r\n                  alias: payload.alias,\r\n                  color: payload.color,\r\n                  timestamp: payload.timestamp,\r\n                  rawtext: payload.rawtext,\r\n                },\r\n              ],\r\n            },\r\n          });\r\n          break;\r\n        }\r\n        case \"convo-search-response\": {\r\n          setMessageSearchResults(payload.messages);\r\n          break;\r\n        }\r\n        case \"convo-image-response\": {\r\n          const currentConvoid = store.getState().messages.currentConvoid;\r\n          const user = store.getState().base.user;\r\n          const socket = store.getState().socket.socket;\r\n\r\n          if (socket && user && isConnected)\r\n            socket.send(\r\n              JSON.stringify({\r\n                type: \"convo-join-request\",\r\n                payload: {\r\n                  jwt: user.token,\r\n                  userid: user.uid,\r\n                  convoid: currentConvoid,\r\n                },\r\n              })\r\n            );\r\n\r\n          break;\r\n        }\r\n        case \"suck-counter-response\": {\r\n          setSuckCounter(payload.count);\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    //eslint-disable-next-line\r\n  }, [socket, setUser]);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"focus\", () => {\r\n      //Nothing\r\n    });\r\n\r\n    document.addEventListener(visibilityChange, () => {\r\n      //Nothing\r\n    });\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  isConnected: state.socket.isConnected,\r\n  convos: state.messages.convos,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  convoListResponse: (convos) => dispatch(convoListResponse(convos)),\r\n  setConvos: (convos) => dispatch(setConvos(convos)),\r\n  setUser: (user) => dispatch(setUser(user)),\r\n  setMessageSearchResults: (messages) =>\r\n    dispatch(setMessageSearchResults(messages)),\r\n  setSocket: (socket) => dispatch(setSocket(socket)),\r\n  setGalleryUrls: (urls) => dispatch(setGalleryUrls(urls)),\r\n  setSuckCounter: (count) => dispatch(setSuckCounter(count)),\r\n  setIsConnected: (isConnected) => dispatch(setIsConnected(isConnected)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WebsocketProvider);\r\n","const theme = {\r\n  palette: {\r\n    primary: {\r\n      main: '#7703fc',\r\n    },\r\n    secondary: {\r\n      main: '#333',\r\n    },\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { auth } from './firebase/firebase.utils'\n\nimport AppRoutes from './App.routes'\nimport { BrowserRouter } from 'react-router-dom'\n// import SocketIOProvider from './components/socket.io-provider/socket.io-provider.components'\nimport WebsocketProvider from './components/websocket-provider/websocket-provider.components'\nimport {\n  ThemeProvider,\n  CssBaseline,\n  useMediaQuery,\n  createMuiTheme,\n} from '@material-ui/core'\n\nimport theme from './theme/theme'\n\nimport { setUser } from './redux/base/base.reducer'\nimport { setConvos } from './redux/messages/messages.reducer'\n\nfunction App({\n  socket,\n  isConnected,\n  user,\n  darkModeEnabled,\n  setUser,\n  setConvos,\n}) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  React.useEffect(() => {\n    //Authentication handling with firebase\n    auth.onAuthStateChanged(async (user) => {\n      if (!user) return setUser(user)\n\n      const token = await user.getIdToken(true)\n\n      user.token = token\n\n      setUser(user)\n    })\n    // eslint-disable-next-line\n  }, [])\n\n  React.useEffect(() => {\n    if (socket && user && isConnected)\n      socket.send(\n        JSON.stringify({\n          type: 'login-request',\n          payload: {\n            jwt: user.token,\n            userid: user.uid,\n          },\n        })\n      )\n  }, [socket, user])\n\n  const superTheme = React.useMemo(\n    () =>\n      createMuiTheme({\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: prefersDarkMode || darkModeEnabled ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode, darkModeEnabled]\n  )\n\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_ROOT_DIRECTORY}>\n      <ThemeProvider theme={superTheme}>\n        <CssBaseline />\n        <WebsocketProvider />\n        <AppRoutes />\n      </ThemeProvider>\n    </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  darkModeEnabled: state.base.darkModeEnabled,\n  user: state.base.user,\n  socket: state.socket.socket,\n  isConnected: state.socket.isConnected,\n  convos: state.messages.convos,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(setUser(user)),\n  setConvos: (convos) => dispatch(setConvos(convos)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { store, persistor } from './redux/store'\n\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}