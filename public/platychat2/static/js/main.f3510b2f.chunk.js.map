{"version":3,"sources":["firebase/firebase.utils.js","pages/login/login.styles.js","pages/login/login.components.jsx","pages/convos/components/convo-list-item/convo-list-item.components.jsx","pages/convos/components/convos-card/convos-card.styles.js","pages/convos/components/convos-card/convos-card.components.jsx","pages/convos/components/search-card/search-card.styles.js","pages/convos/components/search-card/search-card.components.jsx","redux/base/base.reducer.js","pages/convos/components/settings-card/settings-card.styles.js","pages/convos/components/settings-card/settings-card.components.jsx","pages/convos/convos.styles.js","pages/convos/convos.components.jsx","redux/socket/socket.reducer.js","redux/messages/messages.reducer.js","redux/sagas.js","redux/root-reducer.js","redux/store.js","pages/messages/messages.styles.js","pages/messages/messages.components.jsx","App.routes.jsx","components/socket.io-provider/socket.io-provider.components.jsx","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","makeStyles","theme","root","padding","formElement","width","button","backgroundColor","palette","primary","main","color","gridSizes","xs","sm","md","lg","xl","withRouter","history","classes","useStyles","React","useState","username","password","loginForm","setLoginForm","handleChange","e","target","value","name","className","onSubmit","preventDefault","signInWithEmailAndPassword","push","Grid","container","spacing","direction","alignContent","item","Typography","variant","style","textAlign","TextField","size","placeholder","onChange","type","Button","connect","state","socket","user","base","convo","ListItem","onClick","emit","token","uid","convoid","ListItemIcon","Badge","badgeContent","unreadCount","ListItemText","convoname","secondary","participants","convoList","maxHeight","overflowY","input","height","convos","messages","convoName","messagesFilter","inputFields","setInputFields","Card","InputProps","fullWidth","List","dense","Object","keys","map","index","messageResults","messageSearchResults","searchText","setSearchText","result","alias","timestamp","rawtext","SET_DARK_MODE_ENABLED","SET_USER","FORCED_RERENDER","setUser","payload","INITIAL_STATE","darkModeEnabled","baseReducer","dispatch","setDarkModeEnabled","isDarkModeEnabled","setAlias","setColor","alignItems","Switch","checked","_","fullWidthGridSizes","useEffect","signOut","io","SocketIOFileUpload","require","SET_SOCKET","CONVO_LIST_RESPONSE","uploader","socketReducer","SET_CONVOS","SET_MESSAGE_SEARCH_RESULTS","SET_CURRENT_CONVOID","setConvos","currentConvoid","messagesReducer","convoListResponseSaga","allSagas","takeEvery","put","all","call","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","inputGroup","textFieldSizes","buttonSizes","setCurrentConvoid","match","url","split","currentConvo","currentMessages","setInterval","getState","message","setMessage","list","setList","scrollTo","top","ref","test","Box","src","ListItemAvatar","fileList","files","blob","i","fileIdentifier","ret","Math","round","random","toString","_generateRandomString","meta","fileReader","FileReader","onload","submitFiles","readAsDataURL","length","justify","BUILD_DIRECTORY","location","console","log","Container","exact","path","render","to","component","ConvosPage","MessagesPage","warn","convoListResponse","forceRerender","setMessageSearchResults","on","normalizedConvos","JSON","parse","reduce","acc","d","todayString","window","addEventListener","items","clipboardData","kind","getAsFile","prefersDarkMode","useMediaQuery","onAuthStateChanged","a","getIdToken","superTheme","useMemo","createMuiTheme","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3510b2f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCSqIX7JgOxs-W0KSP11rWgg_Smyq3dRr0',\r\n  authDomain: 'platychat.firebaseapp.com',\r\n  databaseURL: 'https://platychat.firebaseio.com',\r\n  projectId: 'platychat',\r\n  storageBucket: 'platychat.appspot.com',\r\n  messagingSenderId: '540254856882',\r\n  appId: '1:540254856882:web:5eb0db85a5670ceb77cbab',\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\n\r\nexport default firebase\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n  formElement: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: '#fff',\r\n    '&:hover': {\r\n      color: '#000',\r\n    },\r\n  },\r\n}))\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { auth } from '../../firebase/firebase.utils'\r\n\r\nimport { Grid, Button, TextField, Typography } from '@material-ui/core'\r\n\r\nimport useStyles from './login.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 6,\r\n  lg: 6,\r\n  xl: 6,\r\n}\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const classes = useStyles()\r\n\r\n  const [loginForm, setLoginForm] = React.useState({\r\n    username: '',\r\n    password: '',\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    auth.signInWithEmailAndPassword(loginForm.username, loginForm.password)\r\n    history.push('/convos')\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { value, name } = e.target\r\n\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} direction='column' alignContent='center'>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h5' style={{ textAlign: 'center' }}>\r\n            Platychat <span>&#x1f986;</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='username'\r\n            variant='outlined'\r\n            size='small'\r\n            placeholder='username'\r\n            value={loginForm.username}\r\n            onChange={handleChange}\r\n            className={classes.formElement}\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='password'\r\n            type='password'\r\n            variant='outlined'\r\n            placeholder='password'\r\n            size='small'\r\n            value={loginForm.password}\r\n            onChange={handleChange}\r\n            className={classes.formElement}\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <Button\r\n            className={`${classes.button} ${classes.formElement}`}\r\n            type='submit'\r\n            variant='contained'>\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(LoginPage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { ListItem, ListItemText, ListItemIcon, Badge } from '@material-ui/core'\r\n\r\n//Icons\r\nimport MessageIcon from '@material-ui/icons/Message'\r\n\r\nconst ConvoListItem = ({ user, socket, convo, history }) => {\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={() => {\r\n        socket.emit('convo-join-request', user.token, user.uid, convo.convoid)\r\n        history.push(`/messages/${convo.convoid}`)\r\n      }}>\r\n      <ListItemIcon>\r\n        <Badge badgeContent={convo.unreadCount} color='primary'>\r\n          <MessageIcon />\r\n        </Badge>\r\n      </ListItemIcon>\r\n      <ListItemText primary={convo.convoname} secondary={convo.participants} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  user: state.base.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ConvoListItem)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  convoList: { maxHeight: '240px', overflowY: 'auto' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  List,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport ConvoListItem from '../convo-list-item/convo-list-item.components'\r\n\r\n//Icons\r\n\r\nimport useStyles from './convos-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst ConvosCard = ({ history, convos, user, socket }) => {\r\n  const classes = useStyles()\r\n\r\n  const [inputFields, setInputFields] = React.useState({\r\n    convoName: '',\r\n    messagesFilter: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setInputFields({\r\n      ...inputFields,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h6'>Messages</Typography>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container>\r\n            <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name='convoName'\r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder='Convo Name...'\r\n                onChange={handleChange}\r\n                value={inputFields.convoName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  socket.emit(\r\n                    'convo-create-request',\r\n                    user.token,\r\n                    user.uid,\r\n                    inputFields.convoName\r\n                  )\r\n                  setInputFields({ ...inputFields, convoName: '' })\r\n                }}>\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container>\r\n            <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name='messagesFilter'\r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder='Search...'\r\n                value={inputFields.messagesFilter}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Button className={classes.input} fullWidth>\r\n                Filter\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid className={classes.convoList} item {...gridSizes}>\r\n          <List dense>\r\n            {Object.keys(convos).map((convo, index) => (\r\n              <ConvoListItem\r\n                key={index}\r\n                convo={convos[convo]}\r\n                history={history}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  convos: state.messages.convos,\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(ConvosCard))\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  messageResults: { maxHeight: '240px', overflowY: 'auto' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport useStyles from './search-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst SearchCard = ({ socket, user, messageSearchResults }) => {\r\n  const classes = useStyles()\r\n\r\n  const [searchText, setSearchText] = React.useState('')\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item {...gridSizes}>\r\n          <TextField\r\n            name='searchMessages'\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item {...gridSizes}>\r\n          <Button\r\n            fullWidth\r\n            variant='contained'\r\n            onClick={() => {\r\n              if (socket && user)\r\n                socket.emit(\r\n                  'convo-search-request',\r\n                  user.token,\r\n                  user.uid,\r\n                  searchText\r\n                )\r\n              setSearchText('')\r\n            }}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid className={classes.messageResults} item {...gridSizes}>\r\n          <List dense>\r\n            {messageSearchResults\r\n              ? messageSearchResults.map((result, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText>\r\n                      {`${result.alias} (${result.timestamp}) - ${result.rawtext}`}\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                ))\r\n              : null}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  user: state.base.user,\r\n  messageSearchResults: state.messages.messageSearchResults,\r\n})\r\n\r\nexport default connect(mapStateToProps)(SearchCard)\r\n","const SET_DARK_MODE_ENABLED = '[BASE] SET_DARK_MODE_ENABLED'\r\nconst SET_USER = '[BASE] SET_USER'\r\nconst FORCED_RERENDER =\r\n  'lollllllll stay mad idiots, im forcing a rerender using redux, stay mad'\r\n\r\nexport const setDarkModeEnabled = (isDarkModeEnabled) => ({\r\n  type: SET_DARK_MODE_ENABLED,\r\n  payload: isDarkModeEnabled,\r\n})\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  payload: user,\r\n})\r\n\r\nexport const forceRerender = () => ({\r\n  type: FORCED_RERENDER,\r\n  payload: Math.random(),\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  darkModeEnabled: false,\r\n  user: null,\r\n}\r\n\r\nconst baseReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case FORCED_RERENDER: {\r\n      return state\r\n    }\r\n    case SET_DARK_MODE_ENABLED: {\r\n      return {\r\n        ...state,\r\n        darkModeEnabled: payload,\r\n      }\r\n    }\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default baseReducer\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n  root: { padding: '20px' },\r\n  input: { height: 38 },\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Switch,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport { setDarkModeEnabled } from '../../../../redux/base/base.reducer'\r\n\r\nimport useStyles from './settings-card.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst SettingsCard = ({\r\n  darkModeEnabled,\r\n  setDarkModeEnabled,\r\n  socket,\r\n  user,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const [alias, setAlias] = React.useState('')\r\n  const [color, setColor] = React.useState('')\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container>\r\n        <Grid item {...gridSizes}>\r\n          <Typography variant='h6'>Settings</Typography>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Typography>Dark Mode</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Switch\r\n                checked={darkModeEnabled}\r\n                onChange={(_, value) => {\r\n                  setDarkModeEnabled(value)\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={6}>\r\n              <Typography>Alias</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                name='alias'\r\n                value={alias}\r\n                onChange={(e) => setAlias(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (user && user.token && socket)\r\n                    socket.emit(\r\n                      'user-alias-request',\r\n                      user.token,\r\n                      user.uid,\r\n                      alias\r\n                    )\r\n                  setAlias('')\r\n                }}\r\n                fullWidth>\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item {...gridSizes}>\r\n          <Grid container alignItems='center'>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={6}>\r\n              <Typography>Color</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                name='color'\r\n                placeholder='#123abf'\r\n                value={color}\r\n                fullWidth\r\n                onChange={(e) => setColor(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (user && user.token && socket)\r\n                    socket.emit(\r\n                      'user-color-request',\r\n                      user.token,\r\n                      user.uid,\r\n                      color\r\n                    )\r\n                  setColor('')\r\n                }}\r\n                fullWidth>\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  darkModeEnabled: state.base.darkModeEnabled,\r\n  socket: state.socket.socket,\r\n  user: state.base.user,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDarkModeEnabled: (isDarkModeEnabled) =>\r\n    dispatch(setDarkModeEnabled(isDarkModeEnabled)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsCard)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n}))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { auth } from '../../firebase/firebase.utils'\r\n\r\nimport { Grid, Button } from '@material-ui/core'\r\n\r\nimport ConvosCard from './components/convos-card/convos-card.components'\r\nimport SearchCard from './components/search-card/search-card.components'\r\nimport SettingsCard from './components/settings-card/settings-card.components'\r\n\r\nimport useStyles from './convos.styles'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 4,\r\n  lg: 4,\r\n  xl: 4,\r\n}\r\n\r\nconst fullWidthGridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst ConvosPage = ({ history, socket, user }) => {\r\n  React.useEffect(() => {\r\n    if (socket && user) socket.emit('convo-list-request', user.token, user.uid)\r\n  }, [socket, user])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid className={classes.root} container spacing={1}>\r\n      <Grid item {...fullWidthGridSizes}>\r\n        <Button\r\n          fullWidth\r\n          onClick={() => {\r\n            auth.signOut()\r\n            history.push('/login')\r\n          }}>\r\n          Sign Out\r\n        </Button>\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <ConvosCard />\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <SearchCard />\r\n      </Grid>\r\n      <Grid item {...gridSizes}>\r\n        <SettingsCard />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  user: state.base.user,\r\n  convos: state.messages.convos,\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(ConvosPage))\r\n","import { io } from 'socket.io-client'\r\n\r\nconst socket = io('https://localhost:443')\r\nconst SocketIOFileUpload = require('socketio-file-upload')\r\n\r\nexport const SET_SOCKET = '[SOCKET] SET_SOCKET'\r\nexport const CONVO_LIST_RESPONSE = '[SOCKET] CONVO_LIST_RESPONSE'\r\n\r\nexport const setSocket = (socket) => ({\r\n  type: SET_SOCKET,\r\n  payload: socket,\r\n})\r\n\r\nexport const convoListResponse = (convos) => ({\r\n  type: CONVO_LIST_RESPONSE,\r\n  payload: convos,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  socket: socket,\r\n  uploader: new SocketIOFileUpload(socket),\r\n}\r\n\r\nconst socketReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_SOCKET: {\r\n      return {\r\n        ...state,\r\n        socket: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default socketReducer\r\n","export const SET_CONVOS = '[MESSAGES] SET_CONVOS'\r\nexport const SET_MESSAGE_SEARCH_RESULTS =\r\n  '[MESSAGES] SET_MESSAGE_SEARCH_RESULTS'\r\nexport const SET_CURRENT_CONVOID = '[MESSAGES] SET_CURRENT_CONVOID'\r\n\r\nexport const setConvos = (convos) => ({\r\n  type: SET_CONVOS,\r\n  payload: convos,\r\n})\r\n\r\nexport const setCurrentConvoid = (convoid) => ({\r\n  type: SET_CURRENT_CONVOID,\r\n  payload: convoid,\r\n})\r\n\r\nexport const setMessageSearchResults = (messages) => ({\r\n  type: SET_MESSAGE_SEARCH_RESULTS,\r\n  payload: messages,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n  convos: {},\r\n  currentConvoid: null,\r\n  messageSearchResults: [],\r\n}\r\n\r\nconst messagesReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_CONVOS: {\r\n      return {\r\n        ...state,\r\n        convos: payload,\r\n      }\r\n    }\r\n    case SET_CURRENT_CONVOID: {\r\n      return {\r\n        ...state,\r\n        currentConvoid: payload,\r\n      }\r\n    }\r\n    case SET_MESSAGE_SEARCH_RESULTS: {\r\n      return {\r\n        ...state,\r\n        messageSearchResults: payload,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default messagesReducer\r\n","import { all, call, put, takeEvery } from 'redux-saga/effects'\r\n\r\nimport { CONVO_LIST_RESPONSE } from './socket/socket.reducer'\r\n\r\nimport { setConvos } from './messages/messages.reducer'\r\n\r\nfunction* convoListResponseSaga() {\r\n  yield takeEvery(CONVO_LIST_RESPONSE, function* ({ payload }) {\r\n    yield put(setConvos(payload))\r\n  })\r\n}\r\n\r\nexport default function* allSagas() {\r\n  yield all([call(convoListResponseSaga)])\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport baseReducer from './base/base.reducer'\r\nimport messagesReducer from './messages/messages.reducer'\r\nimport socketReducer from './socket/socket.reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['base', 'messages'],\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  base: baseReducer,\r\n  messages: messagesReducer,\r\n  socket: socketReducer,\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from 'redux-persist'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport allSagas from './sagas'\r\n\r\nimport rootReducer from './root-reducer.js'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(allSagas)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default { store, persistor }\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n    height: '98vh',\r\n  },\r\n  messages: {\r\n    height: '80vh',\r\n    overflowY: 'auto',\r\n  },\r\n  inputGroup: {\r\n    height: '10vh',\r\n  },\r\n  input: {\r\n    height: 38,\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: '#fff',\r\n  },\r\n}))\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { store } from '../../redux/store'\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Button,\r\n  TextField,\r\n} from '@material-ui/core'\r\n\r\nimport useStyles from './messages.styles'\r\nimport { setCurrentConvoid } from '../../redux/messages/messages.reducer'\r\n\r\nconst gridSizes = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n}\r\n\r\nconst textFieldSizes = {\r\n  xs: 10,\r\n  sm: 10,\r\n  md: 10,\r\n  lg: 10,\r\n  xl: 10,\r\n}\r\n\r\nconst buttonSizes = {\r\n  xs: 2,\r\n  sm: 2,\r\n  md: 2,\r\n  lg: 2,\r\n  xl: 2,\r\n}\r\n\r\nconst MessagesPage = ({\r\n  match,\r\n  user,\r\n  socket,\r\n  uploader,\r\n  convos,\r\n  setCurrentConvoid,\r\n  currentConvoid,\r\n}) => {\r\n  const projectURL = 'https://doxtu.me/platychat'\r\n  const convoid = match.url.split('/')[2]\r\n  const currentConvo = convos[convoid]\r\n  const currentMessages = currentConvo ? currentConvo.messages : []\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const socket = store.getState().socket.socket\r\n      if (!socket) return\r\n      socket.emit('convo-join-request', user.token, user.uid, convoid)\r\n    }, 5000)\r\n\r\n    // return clearInterval(interval)\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setCurrentConvoid(convoid)\r\n  }, [currentConvoid])\r\n\r\n  const classes = useStyles()\r\n\r\n  const [message, setMessage] = React.useState('')\r\n  const [list, setList] = React.useState(null)\r\n\r\n  if (list && list.scrollTo)\r\n    list.scrollTo({\r\n      top: 1000000,\r\n    })\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target\r\n    setMessage(value)\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    var fileList = e.target.files\r\n\r\n    for (var i = 0; i < fileList.length; i++) {\r\n      var blob = fileList[i]\r\n\r\n      function _generateRandomString() {\r\n        let ret = ''\r\n        for (let i = 0; i < 9; i++) {\r\n          ret += Math.round(Math.random() * 9).toString()\r\n        }\r\n        return ret\r\n      }\r\n      const fileIdentifier = _generateRandomString()\r\n\r\n      blob.meta = fileIdentifier\r\n      var fileReader = new FileReader()\r\n      fileReader.onload = function (e) {\r\n        socket.emit(\r\n          'convo-message-request',\r\n          user.token,\r\n          user.uid,\r\n          currentConvoid,\r\n          '/image ' + fileIdentifier\r\n        )\r\n        uploader.submitFiles([blob])\r\n      }\r\n      fileReader.readAsDataURL(blob)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (socket && user) {\r\n      socket.emit(\r\n        'convo-message-request',\r\n        user.token,\r\n        user.uid,\r\n        convoid,\r\n        message\r\n      )\r\n      setMessage('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid className={classes.root} container>\r\n      <Grid\r\n        className={classes.messages}\r\n        item\r\n        {...gridSizes}\r\n        ref={(e) => setList(e)}>\r\n        <List dense>\r\n          {currentMessages\r\n            ? currentMessages.map((message, index) => {\r\n                let rawtext = message.rawtext\r\n\r\n                //replace with image tag if image\r\n                if (/images\\/platychat.+/.test(rawtext))\r\n                  rawtext = (\r\n                    <Box>\r\n                      <br></br>\r\n                      <img src={`${projectURL}/${rawtext}`} />\r\n                    </Box>\r\n                  )\r\n\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <span>&#x1f997;</span>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Box>\r\n                          <span style={{ color: message.color }}>\r\n                            {message.alias}\r\n                          </span>\r\n                          <span>{` ${message.timestamp} - `}</span>\r\n                          <span>{rawtext}</span>\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )\r\n              })\r\n            : null}\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item {...gridSizes}>\r\n        <input name='fileUpload' type='file' onChange={handleFileChange} />\r\n      </Grid>\r\n\r\n      <Grid className={classes.inputGroup} item {...gridSizes}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={1} alignItems='center' justify='center'>\r\n            <Grid item {...textFieldSizes}>\r\n              <TextField\r\n                InputProps={{ className: classes.input }}\r\n                name='message'\r\n                value={message}\r\n                variant='outlined'\r\n                fullWidth\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item {...buttonSizes}>\r\n              <Button\r\n                className={`${classes.input} ${classes.button}`}\r\n                fullWidth\r\n                type='submit'\r\n                variant='outlined'>\r\n                Send\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  uploader: state.socket.uploader,\r\n  convos: state.messages.convos,\r\n  currentConvoid: state.messages.currentConvoid,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConvoid: (convoid) => dispatch(setCurrentConvoid(convoid)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(MessagesPage))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport LoginPage from './pages/login/login.components'\r\nimport ConvosPage from './pages/convos/convos.components'\r\nimport MessagesPage from './pages/messages/messages.components'\r\n\r\nconst BUILD_DIRECTORY = '/platychat2'\r\n\r\nconst AppRoutes = ({ location, match, user }) => {\r\n  console.log(location, match, user)\r\n  return (\r\n    <Container className='App'>\r\n      {/* {!user ? <Redirect to='/login' /> : null}\r\n      {user && match.path === '/' ? <Redirect to='/convos' /> : null}\r\n      {user && match.path === '/login' ? <Redirect to='/convos' /> : null} */}\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={`${BUILD_DIRECTORY}`}\r\n          render={() =>\r\n            user ? (\r\n              <Redirect to={`${BUILD_DIRECTORY}/convos`} />\r\n            ) : (\r\n              <Redirect to={`${BUILD_DIRECTORY}/login`} />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path='/login'\r\n          render={() =>\r\n            user ? <Redirect to={`${BUILD_DIRECTORY}/convos`} /> : <LoginPage />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path={`${BUILD_DIRECTORY}/convos`}\r\n          component={ConvosPage}\r\n        />\r\n        <Route\r\n          exact\r\n          path={`${BUILD_DIRECTORY}/messages/:convoid`}\r\n          component={MessagesPage}\r\n        />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(AppRoutes))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { store } from '../../redux/store'\r\n\r\nimport { convoListResponse } from '../../redux/socket/socket.reducer'\r\nimport {\r\n  setConvos,\r\n  setMessageSearchResults,\r\n} from '../../redux/messages/messages.reducer'\r\nimport { setUser, forceRerender } from '../../redux/base/base.reducer'\r\n\r\nconsole.warn = () => {}\r\n\r\nconst SocketIOProvider = ({\r\n  user,\r\n  socket,\r\n  convoListResponse,\r\n  setConvos,\r\n  forceRerender,\r\n  setMessageSearchResults,\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (!socket) return\r\n\r\n    socket.on('login-response', (color) => {\r\n      if (!user) return\r\n      setUser({\r\n        ...user,\r\n        color,\r\n      })\r\n    })\r\n\r\n    socket.on('convo-list-response', (convos) => {\r\n      const normalizedConvos = JSON.parse(convos).reduce((acc, d) => {\r\n        acc[d.convoid] = d\r\n        return acc\r\n      }, {})\r\n      convoListResponse(normalizedConvos)\r\n    })\r\n\r\n    socket.on('convo-create-response', (convoid, convoname) => {\r\n      const convos = store.getState().messages.convos\r\n      setConvos({\r\n        ...convos,\r\n        [convoid]: { convoid, convoname },\r\n      })\r\n    })\r\n\r\n    socket.on('convo-join-response', (convoid, messages) => {\r\n      setConvos({\r\n        ...store.getState().messages.convos,\r\n        [convoid]: {\r\n          ...store.getState().messages.convos[convoid],\r\n          messages: JSON.parse(messages),\r\n        },\r\n      })\r\n    })\r\n\r\n    socket.on(\r\n      'convo-message-incoming',\r\n      (convoid, todayString, alias, color, timestamp, rawtext) => {\r\n        const convos = store.getState().messages.convos\r\n        setConvos({\r\n          ...convos,\r\n          [convoid]: {\r\n            ...convos[convoid],\r\n            messages: [\r\n              ...(convos[convoid]['messages']\r\n                ? convos[convoid]['messages']\r\n                : []),\r\n              { convoid, todayString, alias, color, timestamp, rawtext },\r\n            ],\r\n          },\r\n        })\r\n      }\r\n    )\r\n\r\n    socket.on('convo-search-response', (messages) => {\r\n      setMessageSearchResults(JSON.parse(messages))\r\n    })\r\n\r\n    window.addEventListener('paste', (e) => {\r\n      const currentConvoid = store.getState().messages.currentConvoid\r\n\r\n      var items = e.clipboardData.items\r\n      var blob\r\n\r\n      for (var i = 0; i < items.length; i++) {\r\n        if (items[i].kind === 'file') {\r\n          blob = items[i].getAsFile()\r\n          break\r\n        }\r\n      }\r\n\r\n      if (typeof blob === 'undefined') return\r\n      var fileReader = new FileReader()\r\n\r\n      function _generateRandomString() {\r\n        let ret = ''\r\n        for (let i = 0; i < 9; i++) {\r\n          ret += Math.round(Math.random() * 9).toString()\r\n        }\r\n        return ret\r\n      }\r\n      const fileIdentifier = _generateRandomString()\r\n\r\n      blob.meta = fileIdentifier\r\n      fileReader.onload = function (e) {\r\n        //inputMessenger.value = '/image ' + e.target.result;\r\n        socket.emit(\r\n          'convo-message-request',\r\n          store.getState().base.user.token,\r\n          store.getState().base.user.uid,\r\n          currentConvoid,\r\n          '/image ' + fileIdentifier\r\n        )\r\n        store.getState().socket.uploader.submitFiles([blob])\r\n      }\r\n      fileReader.readAsDataURL(blob)\r\n    })\r\n\r\n    // return socket.disconnect()\r\n    //eslint-disable-next-line\r\n  }, [socket, setUser, forceRerender])\r\n\r\n  return null\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.base.user,\r\n  socket: state.socket.socket,\r\n  convos: state.messages.convos,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  convoListResponse: (convos) => dispatch(convoListResponse(convos)),\r\n  setConvos: (convos) => dispatch(setConvos(convos)),\r\n  setUser: (user) => dispatch(setUser(user)),\r\n  forceRerender: () => dispatch(forceRerender()),\r\n  setMessageSearchResults: (messages) =>\r\n    dispatch(setMessageSearchResults(messages)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketIOProvider)\r\n","const theme = {\r\n  palette: {\r\n    primary: {\r\n      main: '#7703fc',\r\n    },\r\n    secondary: {\r\n      main: '#333',\r\n    },\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { auth } from './firebase/firebase.utils'\n\nimport AppRoutes from './App.routes'\nimport { BrowserRouter } from 'react-router-dom'\nimport SocketIOProvider from './components/socket.io-provider/socket.io-provider.components'\nimport {\n  ThemeProvider,\n  CssBaseline,\n  useMediaQuery,\n  createMuiTheme,\n} from '@material-ui/core'\n\nimport theme from './theme/theme'\n\nimport { setUser } from './redux/base/base.reducer'\nimport { setConvos } from './redux/messages/messages.reducer'\n\nfunction App({ socket, user, darkModeEnabled, setUser, setConvos }) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  React.useEffect(() => {\n    //Authentication handling with firebase\n    auth.onAuthStateChanged(async (user) => {\n      if (!user) return setUser(user)\n\n      const token = await user.getIdToken(true)\n\n      user.token = token\n\n      setUser(user)\n    })\n\n    if (socket && user) socket.emit('login-request', user.token, user.uid)\n  }, [socket, user, setUser])\n\n  const superTheme = React.useMemo(\n    () =>\n      createMuiTheme({\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: prefersDarkMode || darkModeEnabled ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode, darkModeEnabled]\n  )\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={superTheme}>\n        <CssBaseline />\n        <SocketIOProvider />\n        <AppRoutes />\n      </ThemeProvider>\n    </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  darkModeEnabled: state.base.darkModeEnabled,\n  user: state.base.user,\n  socket: state.socket.socket,\n  convos: state.messages.convos,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(setUser(user)),\n  setConvos: (convos) => dispatch(setConvos(convos)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { store, persistor } from './redux/store'\n\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}